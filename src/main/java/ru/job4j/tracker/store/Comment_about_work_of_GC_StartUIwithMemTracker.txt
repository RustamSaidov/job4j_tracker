StartUIwithMemTracker - Класс, созданный для демонстрации работы сборщиков мусора и попыток переполнения "кучи".
Конфигурация для размера памяти кучи и сборщика мусора: -XX:+UseSerialGC -Xmx500m -Xms500m
то есть используется однопоточный сборщик мусора, а размер "Кучи" составляет 500 мегабайт.
За каждую итерацию мы будем добавлять или удалять 1 миллион случайных объектов типа Item.
Для анализа работы программы мы будем использовать приложение jconsole.

Запускаем программу StartUIwithMemTracker.
На рисунке 1 видим, что при запуске программы у нас в куче стало занято около 44 мегабайт места,
процессор в короткие моменты был занят до 1%.
Создадим 1 миллион случайных обьектов типа Item.
На рисунке 2 видим, что размер занятой памяти в куче увеличился до 250 Мб.
Процессор на короткий момент оказался загружен на 9%.
Удалим все элементы из списка (то есть 1 млн объектов).
На рисунке 3 мы видим, что размер занятого места в куче незначительно увеличился. Очевидно, что сборщик мусора
еще не прошелся по ссылкам, чтобы удалить объекты, на которые ничего не ссылается.
Попробуем переполнить кучу.
Создадим еще 3 млн случайных объектов.
На рисунке 4 видим, что Куча заполнилась до своего предела(500 Мб), после чего произошел обрыв соединения в jconsole.
Процессор был загружен до 12,5% в короткий период.
На рисунке 5 видим, что мы получили ожидаемую ошибку: OutOfMemoryError: Java Heap space.




